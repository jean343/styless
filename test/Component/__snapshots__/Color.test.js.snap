// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Calculates the luma (perceptual brightness) of a color object. 1`] = `
.c0 {
  luma: 44.111615679100964;
  luma: 44.111615679100964;
}

<div
  className="c0"
  color="#64c81e"
/>
`;

exports[`Calculates the value of the luma without gamma correction. 1`] = `
.c0 {
  luminance: 65.28078431372549;
  luminance: 65.28078431372549;
  luminance: 32.640392156862745;
}

<div
  className="c0"
  color="#64c81e"
/>
`;

exports[`Choose which of two colors provides the greatest contrast with another. 1`] = `
.c0 {
  a: #000;
  b: #FFF;
  c: #dddddd;
  d: #000000;
  e: #ffffff;
}

<div
  className="c0"
/>
`;

exports[`Creates a hex representation of a color in #AARRGGBB 1`] = `
.c0 {
  argb: #805a1794;
  argb: #805a1794;
}

<div
  className="c0"
  r={90}
/>
`;

exports[`Creates an opaque color object from decimal red, green and blue (RGB) values. 1`] = `
.c0 {
  rgb: #5a8120;
  rgba: rgba(90,129,32,0.5);
  rgb: #5a8120;
  rgba: rgba(90,129,32,0.5);
  rgb: rgb(90,129,32);
  rgba: rgba(90,129,32,0.5);
  rgb: rgb(90,129,32);
  rgba: rgba(90,129,32,0.5);
  rgb: rgb(255,255,255);
}

<div
  className="c0"
  r={90}
/>
`;

exports[`Creates an opaque color object from hue, saturation and lightness (HSL) values. 1`] = `
.c0 {
  hsl: #80ff00;
  hsl1: #80ff00;
  new: #e6f1da;
  hsla: rgba(128,255,0,0.5);
  hsla: rgba(128,255,0,0.5);
}

<div
  className="c0"
/>
`;

exports[`Creates an opaque color object from hue, saturation and value (HSV) values. 1`] = `
.c0 {
  hsv1: #408000;
  hsv2: #408000;
  hsva1: rgba(64,128,0,0.5);
  hsva2: rgba(64,128,0,0.5);
}

<div
  className="c0"
/>
`;

exports[`Decrease the lightness of a color in the HSL color space by an absolute amount. 1`] = `
.c0 {
  darken: rgb(77,138,15);
  darken: rgb(77,138,15);
  darken: rgb(77,138,15);
}

<div
  className="c0"
  color="hsl(90, 80%, 50%)"
/>
`;

exports[`Decrease the saturation of a color in the HSL color space by an absolute amount. 1`] = `
.c0 {
  desaturate: rgb(128,204,51);
  desaturate: rgb(128,204,51);
  desaturate: rgb(128,204,51);
}

<div
  className="c0"
  color="hsl(90, 80%, 50%)"
/>
`;

exports[`Decrease the transparency (or increase the opacity) of a color, making it more opaque. Has no effect on opaque colors. 1`] = `
.c0 {
  fadein: rgba(128,242,13,0.6);
  fadein: rgba(128,242,13,0.6);
  fadein: rgba(128,242,13,0.6);
  fadein: rgba(128,242,13,0.55);
  fadein: rgba(128,242,13,0.55);
  fadein: rgba(128,242,13,0.55);
  fadein: rgb(128,242,13);
  fadein: rgb(128,242,13);
}

<div
  className="c0"
  color="hsla(90, 90%, 50%, 0.5)"
  r="relative"
/>
`;

exports[`Extract and reconstruct an hsl color. 1`] = `
.c0 {
  col-before: #80bf40;
  col-after: #80bf40;
}

<div
  className="c0"
/>
`;

exports[`Extract and reconstruct an hsl color. 2`] = `
.c0 {
  col-before: #80ff00;
  col-after: #80ff00;
}

<div
  className="c0"
/>
`;

exports[`Extract and reconstruct an hsv color. 1`] = `
.c0 {
  col-before: #608040;
  col-after: #608040;
}

<div
  className="c0"
/>
`;

exports[`Extract and reconstruct an hsv color. 2`] = `
.c0 {
  col-before: #80ff00;
  col-after: #80ff00;
}

<div
  className="c0"
/>
`;

exports[`Extracts the alpha channel of a color object. 1`] = `
.c0 {
  alpha: 0.5;
  alpha: 0.5;
  alpha: 0.5;
}

<div
  className="c0"
  color="#0a141e80"
  r={10}
/>
`;

exports[`Extracts the blue channel of a color object. 1`] = `
.c0 {
  blue: 30;
  blue: 30;
  blue: 30;
}

<div
  className="c0"
  color="#0a141e"
  r={10}
/>
`;

exports[`Extracts the green channel of a color object. 1`] = `
.c0 {
  green: 20;
  green: 20;
  green: 20;
}

<div
  className="c0"
  color="#0a141e"
  r={10}
/>
`;

exports[`Extracts the hue channel of a color object in the HSL color space. 1`] = `
.c0 {
  hue: 90;
  hue: 90;
  hue: 90;
  hue: 90;
}

<div
  className="c0"
  color="#80ff00"
/>
`;

exports[`Extracts the hue channel of a color object in the HSV color space. 1`] = `
.c0 {
  hsvhue: 90;
  hsvhue: 90;
  hsvhue: 90;
  hsvhue: 90;
}

<div
  className="c0"
  color="#80ff00"
/>
`;

exports[`Extracts the lightness channel of a color object in the HSL color space. 1`] = `
.c0 {
  lightness: 50%;
  lightness: 50%;
  lightness: 50%;
  lightness: 50%;
  lightness: 50%;
}

<div
  className="c0"
  color="#80ff00"
/>
`;

exports[`Extracts the red channel of a color object. 1`] = `
.c0 {
  red: 10;
  red: 10;
  red: 10;
}

<div
  className="c0"
  color="#0a141e"
  r={10}
/>
`;

exports[`Extracts the saturation channel of a color object in the HSL color space. 1`] = `
.c0 {
  saturation: 100%;
  saturation: 100%;
  saturation: 100%;
  saturation: 100%;
  saturation: 50%;
}

<div
  className="c0"
  color="#80ff00"
/>
`;

exports[`Extracts the saturation channel of a color object in the HSV color space. 1`] = `
.c0 {
  hsvsaturation: 100%;
  hsvsaturation: 100%;
  hsvsaturation: 100%;
  hsvsaturation: 100%;
  hsvsaturation: 50%;
}

<div
  className="c0"
  color="#80ff00"
/>
`;

exports[`Extracts the value channel of a color object in the HSV color space. 1`] = `
.c0 {
  hsvvalue: 50%;
  hsvvalue: 50%;
  hsvvalue: 50%;
  hsvvalue: 50%;
  hsvvalue: 50%;
}

<div
  className="c0"
  color="#408000"
/>
`;

exports[`Increase the lightness of a color in the HSL color space by an absolute amount. 1`] = `
.c0 {
  lighten: rgb(179,240,117);
  lighten: rgb(179,240,117);
  lighten: rgb(179,240,117);
}

<div
  className="c0"
  color="hsl(90, 80%, 50%)"
/>
`;

exports[`Increase the saturation of a color in the HSL color space by an absolute amount. 1`] = `
.c0 {
  saturate: rgb(128,255,0);
  saturate: rgb(128,255,0);
  saturate: rgb(128,255,0);
}

<div
  className="c0"
  color="hsl(90, 80%, 50%)"
/>
`;

exports[`Increase the transparency (or decrease the opacity) of a color, making it less opaque. 1`] = `
.c0 {
  fadeout: rgba(128,242,13,0.4);
  fadeout: rgba(128,242,13,0.4);
  fadeout: rgba(128,242,13,0.4);
  fadeout: rgba(128,242,13,0.45);
  fadeout: rgba(128,242,13,0.45);
  fadeout: rgba(128,242,13,0.45);
  fadeout: rgba(128,242,13,0);
  fadeout: rgba(128,242,13,0);
}

<div
  className="c0"
  color="hsla(90, 90%, 50%, 0.5)"
  r="relative"
/>
`;

exports[`Mix color with black in variable proportion. 1`] = `
.c0 {
  no-alpha: #004080;
  no-alpha: #004080;
}

<div
  className="c0"
  color="#007fff"
/>
`;

exports[`Mix color with white in variable proportion. 1`] = `
.c0 {
  no-alpha: #80bfff;
  no-alpha: #80bfff;
}

<div
  className="c0"
  color="#007fff"
/>
`;

exports[`Mix two colors together in variable proportion. Opacity is included in the calculations. 1`] = `
.c0 {
  mix: #800080;
  mix: #800080;
  mix: #323200;
}

<div
  className="c0"
/>
`;

exports[`Remove all saturation from a color in the HSL color space. 1`] = `
.c0 {
  greyscale1: rgb(128,128,128);
  greyscale2: rgb(128,128,128);
}

<div
  className="c0"
  color="hsl(90, 90%, 50%)"
/>
`;

exports[`Rotate the hue angle of a color in either direction. 1`] = `
.c0 {
  spin: #f2a50d;
  spin: #f20d5a;
  spin: #f2a50d;
  spin: #f20d5a;
  spin: #f2a50d;
  spin: #f20d5a;
  spin: #f2a60d;
  spin: #f2330d;
}

<div
  className="c0"
  color="hsl(10, 90%, 50%)"
/>
`;

exports[`Set the absolute opacity of a color. Can be applied to colors whether they already have an opacity value or not. 1`] = `
.c0 {
  fade: rgba(128,242,13,0.1);
  fade: rgba(128,242,13,0.1);
  fade: rgba(128,242,13,0);
  fade: rgb(128,242,13);
}

<div
  className="c0"
  color="hsla(90, 90%, 50%, 0.5)"
/>
`;
